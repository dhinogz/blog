<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>TIL on David Hinojosa</title><link>https://davhinojosa.com/til/</link><description>Recent content in TIL on David Hinojosa</description><generator>Hugo</generator><language>en-US</language><copyright>Copyright Â© 2024, David Hinojosa Gonzalez.</copyright><lastBuildDate>Tue, 16 Jul 2024 17:22:01 -0600</lastBuildDate><atom:link href="https://davhinojosa.com/til/index.xml" rel="self" type="application/rss+xml"/><item><title>Sse Events</title><link>https://davhinojosa.com/til/sse-events/</link><pubDate>Tue, 16 Jul 2024 17:22:01 -0600</pubDate><guid>https://davhinojosa.com/til/sse-events/</guid><description>TIL sse-events</description></item><item><title>TIL: Git Pre-Commits</title><link>https://davhinojosa.com/til/pre-commit/</link><pubDate>Fri, 12 Jul 2024 14:00:46 -0600</pubDate><guid>https://davhinojosa.com/til/pre-commit/</guid><description>As I was configuring the deployment of this blog, I wanted to see how I could automate the build and publish process. I knew using Github Actions was a common approach. Here&amp;rsquo;s what I envisioned in my head:
Implementing this approach caused me a bit of trouble with managing the public folder&amp;rsquo;s Git history and was a headache to get working properly. Best to toss it and start over again. Enter Git Hooks.</description></item></channel></rss>